{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logout),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogout),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_FAILURE, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_SUCCESS } from \"../reducers/user\";\n\nfunction loginApi(data) {// axios.post('/api/user/login', data);\n}\n\nfunction logoutApi(data) {}\n\nfunction logout(action) {\n  return _regeneratorRuntime.wrap(function logout$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return put({\n            type: LOG_OUT_SUCCESS,\n            data: action.data\n          });\n\n        case 3:\n          _context.next = 9;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 9;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 5]]);\n}\n\nfunction login(action) {\n  return _regeneratorRuntime.wrap(function login$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          // const result = yield call(logInApi, action.data);\n          delay(1000);\n          _context2.next = 4;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: _objectSpread(_objectSpread({}, action.data), {}, {\n              nickname: 'james'\n            })\n          });\n\n        case 4:\n          _context2.next = 10;\n          break;\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 10;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 6]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeLatest('LOG_IN_REQUEST', login);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest('LOG_OUT_REQUEST', logout);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([fork(watchLogin), fork(watchLogout)]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["/Users/mark/WebstormProjects/nodebird_inf/sagas/user.js"],"names":["logout","login","watchLogin","watchLogout","userSaga","all","delay","fork","put","takeLatest","call","axios","LOG_IN_FAILURE","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_SUCCESS","loginApi","data","logoutApi","action","type","error","response","nickname"],"mappings":";;;;;;;oDAUUA,M;qDAcAC,K;qDAgBAC,U;qDAIAC,W;qDAIeC,Q;;AAhDzB,SAASC,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,EAA4CC,IAA5C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,EAAwBC,cAAxB,EAAwCC,eAAxC,EAAyDC,eAAzD,QAA+E,kBAA/E;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB,CACtB;AACD;;AAED,SAASC,SAAT,CAAmBD,IAAnB,EAAyB,CAAE;;AAE3B,SAAUjB,MAAV,CAAiBmB,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAMX,GAAG,CAAC;AACRY,YAAAA,IAAI,EAAEL,eADE;AAERE,YAAAA,IAAI,EAAEE,MAAM,CAACF;AAFL,WAAD,CAAT;;AAFJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOI,iBAAMT,GAAG,CAAC;AACRY,YAAAA,IAAI,EAAEN,eADE;AAERO,YAAAA,KAAK,EAAE,YAAEC,QAAF,CAAWL;AAFV,WAAD,CAAT;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAUhB,KAAV,CAAgBkB,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI;AACAb,UAAAA,KAAK,CAAC,IAAD,CAAL;AAHJ;AAII,iBAAME,GAAG,CAAC;AACRY,YAAAA,IAAI,EAAEP,cADE;AAERI,YAAAA,IAAI,kCAAOE,MAAM,CAACF,IAAd;AAAoBM,cAAAA,QAAQ,EAAE;AAA9B;AAFI,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASI,iBAAMf,GAAG,CAAC;AACRY,YAAAA,IAAI,EAAER,cADE;AAERS,YAAAA,KAAK,EAAE,aAAEC,QAAF,CAAWL;AAFV,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAUf,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,UAAU,CAAC,gBAAD,EAAmBR,KAAnB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUE,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMM,UAAU,CAAC,iBAAD,EAAoBT,MAApB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUI,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CAACE,IAAI,CAACL,UAAD,CAAL,EAAmBK,IAAI,CAACJ,WAAD,CAAvB,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, delay, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport {LOG_IN_FAILURE, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_SUCCESS} from \"../reducers/user\";\n\nfunction loginApi(data) {\n  // axios.post('/api/user/login', data);\n}\n\nfunction logoutApi(data) {}\n\nfunction* logout(action) {\n  try {\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: action.data,\n    });\n  } catch (e) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: e.response.data,\n    });\n  }\n}\n\nfunction* login(action) {\n  try {\n    // const result = yield call(logInApi, action.data);\n    delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: { ...action.data, nickname: 'james' },\n    });\n  } catch (e) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: e.response.data,\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest('LOG_IN_REQUEST', login);\n}\n\nfunction* watchLogout() {\n  yield takeLatest('LOG_OUT_REQUEST', logout);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout)]);\n}\n"]},"metadata":{},"sourceType":"module"}