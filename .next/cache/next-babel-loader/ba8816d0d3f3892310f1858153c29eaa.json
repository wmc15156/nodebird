{"ast":null,"code":"var _jsxFileName = \"/Users/mark/WebstormProjects/nodebird_inf/components/PostForm/index.js\";\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useInput from '../../hooks/userInput';\nimport { addPost } from '../../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummy = {\n  isLoggedIn: true,\n  imagePaths: [],\n  mainPosts: [{\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫 번째 게시글',\n    img: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n  }]\n};\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const [text, setText, onChangeText] = useInput('');\n  const imageInput = useRef();\n  const {\n    addPostDone,\n    imagePaths\n  } = useSelector(state => state === null || state === void 0 ? void 0 : state.post);\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n  }, [text]);\n  const data = useSelector(state => state === null || state === void 0 ? void 0 : state.post.mainPosts);\n  console.log('image', data.imagePaths, data, imagePaths);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uC624\\uB298\\uC740 \\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uCA31\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: dummy.imagePaths.map(v => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: v,\n          style: {\n            width: '200px'\n          },\n          alt: v\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC81C\\uAC70\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, v, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/mark/WebstormProjects/nodebird_inf/components/PostForm/index.js"],"names":["Button","Form","Input","useDispatch","useSelector","useCallback","useEffect","useRef","useInput","addPost","dummy","isLoggedIn","imagePaths","mainPosts","User","id","nickname","content","img","PostForm","dispatch","text","setText","onChangeText","imageInput","addPostDone","state","post","onSubmit","data","console","log","onClickImageUpload","current","click","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useInput from '../../hooks/userInput';\nimport { addPost } from '../../reducers/post';\n\nconst dummy = {\n  isLoggedIn: true,\n  imagePaths: [],\n  mainPosts: [\n    {\n      User: {\n        id: 1,\n        nickname: '제로초',\n      },\n      content: '첫 번째 게시글',\n      img: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\n    },\n  ],\n};\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const [text, setText, onChangeText] = useInput('');\n  const imageInput = useRef();\n  const { addPostDone, imagePaths } = useSelector((state) => state?.post);\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n  }, [text]);\n\n  const data = useSelector((state) => state?.post.mainPosts);\n  console.log('image', data.imagePaths, data, imagePaths);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return (\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\n      <Input.TextArea\n        value={text}\n        onChange={onChangeText}\n        maxLength={140}\n        placeholder=\"오늘은 어떤 신기한 일이 있었나요?\"\n      />\n      <div>\n        <input type=\"file\" multiple hidden ref={imageInput} />\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n        <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">\n          짹쨱\n        </Button>\n      </div>\n      <div>\n        {dummy.imagePaths.map((v) => (\n          <div key={v} style={{ display: 'inline-block' }}>\n            <img src={v} style={{ width: '200px' }} alt={v} />\n            <div>\n              <Button>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}