{"ast":null,"code":"import { useCallback, useState } from 'react';\n\nconst useInput = initialState => {\n  const {\n    0: value,\n    1: setter\n  } = useState(initialState);\n  const handler = useCallback(e => {\n    setter(e.target.value);\n  }, []);\n  return [value, setter, handler];\n};\n\nexport default useInput;","map":{"version":3,"sources":["/Users/mark/WebstormProjects/nodebird_inf/hooks/userInput.tsx"],"names":["useCallback","useState","useInput","initialState","value","setter","handler","e","target"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;AAEA,MAAMC,QAAQ,GAAIC,YAAD,IAAkB;AACjC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAkBJ,QAAQ,CAACE,YAAD,CAAhC;AACA,QAAMG,OAAO,GAAGN,WAAW,CAAEO,CAAD,IAAO;AACjCF,IAAAA,MAAM,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAN;AACD,GAF0B,EAExB,EAFwB,CAA3B;AAGA,SAAO,CAACA,KAAD,EAAQC,MAAR,EAAgBC,OAAhB,CAAP;AACD,CAND;;AAQA,eAAeJ,QAAf","sourcesContent":["import { useCallback, useState } from 'react';\n\nconst useInput = (initialState) => {\n  const [value, setter] = useState(initialState);\n  const handler = useCallback((e) => {\n    setter(e.target.value);\n  }, []);\n  return [value, setter, handler];\n};\n\nexport default useInput;\n"]},"metadata":{},"sourceType":"module"}