{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(postRootSaga);\n\nimport { all, takeLatest, delay, call, put } from 'redux-saga/effects';\n\nfunction addPostApi(data) {}\n\nfunction addPost(action) {\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(1000);\n\n        case 3:\n          put({\n            type: 'ADD_POST_SUCCESS'\n          });\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          put({\n            type: 'ADD_POST_FAILURE',\n            data: _context.t0.response.data\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 6]]);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest('ADD_POST_REQUEST', addPost);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function postRootSaga() {\n  return _regeneratorRuntime.wrap(function postRootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          all([fork(watchAddPost)]);\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/Users/mark/WebstormProjects/nodebird_inf/sagas/post.js"],"names":["addPost","watchAddPost","postRootSaga","all","takeLatest","delay","call","put","addPostApi","data","action","type","response","fork"],"mappings":";;oDAIUA,O;qDAeAC,Y;qDAIeC,Y;;AAvBzB,SAASC,GAAT,EAAcC,UAAd,EAA0BC,KAA1B,EAAiCC,IAAjC,EAAuCC,GAAvC,QAAkD,oBAAlD;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B,CAAE;;AAE5B,SAAUT,OAAV,CAAkBU,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI,iBAAML,KAAK,CAAC,IAAD,CAAX;;AAHJ;AAIIE,UAAAA,GAAG,CAAC;AACFI,YAAAA,IAAI,EAAE;AADJ,WAAD,CAAH;AAJJ;AAAA;;AAAA;AAAA;AAAA;AAQIJ,UAAAA,GAAG,CAAC;AACFI,YAAAA,IAAI,EAAE,kBADJ;AAEFF,YAAAA,IAAI,EAAE,YAAEG,QAAF,CAAWH;AAFf,WAAD,CAAH;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SAAUR,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMG,UAAU,CAAC,kBAAD,EAAqBJ,OAArB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,YAAV;AAAA;AAAA;AAAA;AAAA;AACbC,UAAAA,GAAG,CAAC,CAACU,IAAI,CAACZ,YAAD,CAAL,CAAD,CAAH;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, takeLatest, delay, call, put } from 'redux-saga/effects';\n\nfunction addPostApi(data) {}\n\nfunction* addPost(action) {\n  try {\n    //const result = yield call(addPostApi, action.data);\n    yield delay(1000);\n    put({\n      type: 'ADD_POST_SUCCESS',\n    });\n  } catch (e) {\n    put({\n      type: 'ADD_POST_FAILURE',\n      data: e.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest('ADD_POST_REQUEST', addPost);\n}\n\nexport default function* postRootSaga() {\n  all([fork(watchAddPost)]);\n}\n"]},"metadata":{},"sourceType":"module"}